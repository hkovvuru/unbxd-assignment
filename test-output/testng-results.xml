<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-11-25T12:23:32 IST" name="Suite" finished-at="2019-11-25T12:29:05 IST" duration-ms="333569">
    <groups>
    </groups>
    <test started-at="2019-11-25T12:23:32 IST" name="monoprice app test demo" finished-at="2019-11-25T12:29:05 IST" duration-ms="333569">
      <class name="monoprice_demo.AutoSuggestionsDemo">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:23:32 IST" name="setExtent" finished-at="2019-11-25T12:23:32 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="browser_setup()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:23:32 IST" name="browser_setup" finished-at="2019-11-25T12:23:51 IST" duration-ms="19438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method signature="checkAutoSuggestions()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:23:51 IST" name="checkAutoSuggestions" finished-at="2019-11-25T12:23:55 IST" duration-ms="3897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAutoSuggestions -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:23:55 IST" name="tearDown" finished-at="2019-11-25T12:23:55 IST" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAutoSuggestions status=SUCCESS method=AutoSuggestionsDemo.checkAutoSuggestions()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="browser_setup()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:23:55 IST" name="browser_setup" finished-at="2019-11-25T12:24:23 IST" duration-ms="27831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method signature="checkAutoSuggestionsWithManyLetters()[pri:1, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:24:23 IST" name="checkAutoSuggestionsWithManyLetters" finished-at="2019-11-25T12:24:29 IST" duration-ms="5577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAutoSuggestionsWithManyLetters -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:24:29 IST" name="tearDown" finished-at="2019-11-25T12:24:29 IST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAutoSuggestionsWithManyLetters status=SUCCESS method=AutoSuggestionsDemo.checkAutoSuggestionsWithManyLetters()[pri:1, instance:monoprice_demo.AutoSuggestionsDemo@223f3642] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="browser_setup()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:24:29 IST" name="browser_setup" finished-at="2019-11-25T12:24:45 IST" duration-ms="15668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method signature="checkAutoSuggestionsAndClickKeywordSuggestion()[pri:2, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:24:45 IST" name="checkAutoSuggestionsAndClickKeywordSuggestion" finished-at="2019-11-25T12:25:43 IST" duration-ms="58090" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(.//*[normalize-space(text()) and normalize-space(.)='(2)'])[26]/following::span[1]"}
  (Session info: chrome=78.0.3904.97)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'hussain-ThinkPad-L480', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-70-generic', java.version: '11.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.97, chrome: {chromedriverVersion: 78.0.3904.105 (60e2d8774a81..., userDataDir: /tmp/.com.google.Chrome.S1dWLZ}, goog:chromeOptions: {debuggerAddress: localhost:36931}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 0d88a2de52f60e691b1a0515becb85e7
*** Element info: {Using=xpath, value=(.//*[normalize-space(text()) and normalize-space(.)='(2)'])[26]/following::span[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(.//*[normalize-space(text()) and normalize-space(.)='(2)'])[26]/following::span[1]"}
  (Session info: chrome=78.0.3904.97)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'hussain-ThinkPad-L480', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-70-generic', java.version: '11.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.97, chrome: {chromedriverVersion: 78.0.3904.105 (60e2d8774a81..., userDataDir: /tmp/.com.google.Chrome.S1dWLZ}, goog:chromeOptions: {debuggerAddress: localhost:36931}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 0d88a2de52f60e691b1a0515becb85e7
*** Element info: {Using=xpath, value=(.//*[normalize-space(text()) and normalize-space(.)='(2)'])[26]/following::span[1]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at monoprice_demo.AutoSuggestionsDemo.checkAutoSuggestionsAndClickKeywordSuggestion(AutoSuggestionsDemo.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAutoSuggestionsAndClickKeywordSuggestion -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:25:43 IST" name="tearDown" finished-at="2019-11-25T12:25:43 IST" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAutoSuggestionsAndClickKeywordSuggestion status=FAILURE method=AutoSuggestionsDemo.checkAutoSuggestionsAndClickKeywordSuggestion()[pri:2, instance:monoprice_demo.AutoSuggestionsDemo@223f3642] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="browser_setup()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:25:43 IST" name="browser_setup" finished-at="2019-11-25T12:27:43 IST" duration-ms="119651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method signature="clickAutoSuggestionsInfieldKeywords()[pri:3, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:27:43 IST" name="clickAutoSuggestionsInfieldKeywords" finished-at="2019-11-25T12:28:17 IST" duration-ms="33798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAutoSuggestionsInfieldKeywords -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:28:17 IST" name="tearDown" finished-at="2019-11-25T12:28:17 IST" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAutoSuggestionsInfieldKeywords status=SUCCESS method=AutoSuggestionsDemo.clickAutoSuggestionsInfieldKeywords()[pri:3, instance:monoprice_demo.AutoSuggestionsDemo@223f3642] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="browser_setup()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:28:17 IST" name="browser_setup" finished-at="2019-11-25T12:28:42 IST" duration-ms="24917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method signature="validatePopularProductPage()[pri:4, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:28:42 IST" name="validatePopularProductPage" finished-at="2019-11-25T12:29:05 IST" duration-ms="23233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePopularProductPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:29:05 IST" name="tearDown" finished-at="2019-11-25T12:29:05 IST" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePopularProductPage status=SUCCESS method=AutoSuggestionsDemo.validatePopularProductPage()[pri:4, instance:monoprice_demo.AutoSuggestionsDemo@223f3642] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:29:05 IST" name="endReport" finished-at="2019-11-25T12:29:05 IST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method is-config="true" signature="triggerMail()[pri:0, instance:monoprice_demo.AutoSuggestionsDemo@223f3642]" started-at="2019-11-25T12:29:05 IST" name="triggerMail" finished-at="2019-11-25T12:29:12 IST" duration-ms="7159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triggerMail -->
      </class> <!-- monoprice_demo.AutoSuggestionsDemo -->
    </test> <!-- monoprice app test demo -->
  </suite> <!-- Suite -->
</testng-results>
